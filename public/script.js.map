{"version":3,"file":"script.js","mappings":"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","sources":["webpack://project2/./src/chat.js","webpack://project2/./src/error.js","webpack://project2/./src/login.js","webpack://project2/./src/messagelist.js","webpack://project2/./src/services.js","webpack://project2/./src/state.js","webpack://project2/./src/update.js","webpack://project2/./src/userList.js","webpack://project2/./src/view.js","webpack://project2/webpack/bootstrap","webpack://project2/webpack/runtime/define property getters","webpack://project2/webpack/runtime/hasOwnProperty shorthand","webpack://project2/webpack/runtime/make namespace object","webpack://project2/./src/index.js"],"sourcesContent":["import state from './state';\r\nimport generateUsersLists from './userList';\r\nimport generateMessagesList from './messagelist';\r\n\r\nconst appEl = document.querySelector('#app');\r\n\r\nfunction renderChatPage() {\r\n    if (!state.logged) {\r\n        return;\r\n    }\r\n\r\n    const userListHTML = generateUsersLists();\r\n\r\n    const messageListHTML = generateMessagesList();\r\n\r\n    const messageHTML = state.isChatLoading ?\r\n        `\r\n    <div class= \"fetchingmessage-div\">\r\n    <div class='message-spinner'></div>\r\n  </div>\r\n    ` :\r\n        `\r\n        <div class=\"chat-page\">\r\n    <div class=\"chat-container\">\r\n    <div class=\"users-section\">\r\n    <h2>Online Users</h2>\r\n    <ul class=\"users-list\">${userListHTML}</ul>\r\n    </div>\r\n    <div class=\"messages-section\">\r\n    <h2>Messages</h2>\r\n    <ul class=\"messages-list\">${messageListHTML}</ul>\r\n    </div>\r\n    </div>\r\n    <div class=\"chatinput-section\">\r\n    <form class=\"chat-form\">\r\n    <label class=\"chat-label\">Chat: </label>\r\n    <input id=\"chat-input\" type=\"text\" placeholder=\"Type in here\" size=\"30\" required></input>\r\n    <button type=\"submit\" class=\"send-button\">Send</button>\r\n    </form>\r\n    <p class=\"error-message\">${state.error}</p>\r\n    <button class=\"logout-button\">Logout</button>\r\n    </div>\r\n    </div>\r\n    `;\r\n\r\n    appEl.innerHTML = messageHTML;\r\n}\r\n\r\nexport default renderChatPage;","import render from './view';\r\nimport state from './state';\r\n\r\nconst messages = {\r\n    'network-error': 'Please check your Internet connection!',\r\n    'auth-missing': 'Your session expires, please login first!',\r\n    'required-username': 'Username cannot be empty, and should consist of only numbers and digits!',\r\n    'auth-insufficient': 'Sorry dogs, please try another username!',\r\n    'required-message': 'Please input your message!',\r\n    default: 'Something went wrong, please try again later!',\r\n};\r\n\r\nfunction handleError(err) {\r\n    state.error = messages[err.error] || messages.default;\r\n    render();\r\n}\r\n\r\nexport default handleError;","import state from './state';\r\n\r\nconst appEl = document.querySelector('#app');\r\n\r\nfunction renderLoginPage() {\r\n    if (state.logged) {\r\n        appEl.innerHTML = '';\r\n        return;\r\n    }\r\n    if (state.isInitialLoading) {\r\n        appEl.innerHTML = `<div class= \"fetching-div\">\r\n        <div class='spinner'></div>\r\n      </div>`;\r\n        return;\r\n    }\r\n\r\n    const spinnerHTML = state.isLoginLoading ?\r\n        `\r\n    <div class='fetchinglogin-div'>\r\n    <div class='login-spinner'></div>\r\n  </div>\r\n    ` :\r\n        ``;\r\n    const errorHTML = state.error ?\r\n        `<p class=\"error-message\">${state.error}</p>` :\r\n        ``;\r\n    const loginHTML = `\r\n    <div class=\"login-page\">\r\n    <img src=\"/img/chat.png\" class=\"login-img\" alt=\"login img\" />\r\n    <h1>Welcome to LetsChat!</h1>\r\n    <form class=\"login-form\">\r\n    <label class=\"login-label\" for=\"login-input\">Username: </label>\r\n    <input id=\"login-input\" type=\"text\" placeholder=\"Please enter your username\" size=\"23\"></input>\r\n    <button class=\"login-button\">LOGIN</button>\r\n    </form>\r\n    ${spinnerHTML}\r\n    ${errorHTML}\r\n    </div>\r\n    `;\r\n\r\n    appEl.innerHTML = loginHTML;\r\n}\r\n\r\nexport default renderLoginPage;","import state from './state';\r\n\r\nfunction generateMessagesList() {\r\n    const messageListHTML =\r\n        state.messages.length === 0 ?\r\n        `<p class=\"empty-message\">No messages, try send one!</p>` :\r\n        state.messages\r\n        .map(\r\n            (message) => `<li class=\"single-message\"> \r\n    <div class=\"message-info\">\r\n    <img src=\"/img/${message.imgID}.png\" class=\"message-avatar\" />\r\n    <span class=\"message-username\">${message.user}</span>\r\n    </div>\r\n    <span class=\"${\r\n      message.user === state.username ? 'user-message' : 'message-content'\r\n    }\">${message.message}</span>\r\n    </li>`\r\n        )\r\n        .join('');\r\n\r\n    return messageListHTML;\r\n}\r\n\r\nexport default generateMessagesList;","function fetchLogin(username) {\r\n    return fetch('/api/v1/session', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({ username }),\r\n        })\r\n        .catch((err) => Promise.reject({ error: 'network-error' }))\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.json().then((err) => Promise.reject(err));\r\n            }\r\n            return response.json();\r\n        });\r\n}\r\n\r\nfunction checkSession() {\r\n    return fetch('/api/v1/session', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .catch((err) => Promise.reject({ error: 'network-error' }))\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.json().then((err) => Promise.reject(err));\r\n            }\r\n            return response.json();\r\n        });\r\n}\r\n\r\nfunction logOut() {\r\n    return fetch('/api/v1/session', { method: 'DELETE', credentials: 'include' })\r\n        .catch((err) => Promise.reject({ error: 'network-error' }))\r\n        .then((response) => {\r\n            return response.json();\r\n        });\r\n}\r\n\r\nfunction fetchUserList() {\r\n    return fetch('/api/v1/users', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .catch((err) => Promise.reject({ error: 'network-error' }))\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.json().then((err) => Promise.reject(err));\r\n            }\r\n            return response.json();\r\n        });\r\n}\r\n\r\nfunction fetchMessages() {\r\n    return fetch('/api/v1/messages', {\r\n            method: 'GET',\r\n            credentials: 'include',\r\n        })\r\n        .catch((err) => Promise.reject({ error: 'network-error' }))\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.json().then((err) => Promise.reject(err));\r\n            }\r\n            return response.json();\r\n        });\r\n}\r\n\r\nfunction sendMessage(message) {\r\n    return fetch('/api/v1/messages', {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n            credentials: 'include',\r\n            body: JSON.stringify({ message }),\r\n        })\r\n        .catch((err) => Promise.reject({ error: 'network-error' }))\r\n        .then((response) => {\r\n            if (!response.ok) {\r\n                return response.json().then((err) => Promise.reject(err));\r\n            }\r\n            return response.json();\r\n        });\r\n}\r\n\r\nconst services = {\r\n    fetchLogin,\r\n    checkSession,\r\n    fetchUserList,\r\n    fetchMessages,\r\n    logOut,\r\n    sendMessage,\r\n};\r\n\r\nexport default services;","const state = {\r\n    logged: false,\r\n    error: '',\r\n    messages: [],\r\n    users: [],\r\n    isInitialLoading: false,\r\n    isLoginLoading: false,\r\n    isChatLoading: false,\r\n};\r\n\r\nexport default state;","import state from './state';\r\nimport generateMessagesList from './messagelist';\r\nimport generateUsersLists from './userList';\r\n\r\nfunction update() {\r\n    if (!state.logged) {\r\n        return;\r\n    }\r\n    const userListEl = document.querySelector('.users-list');\r\n    const messageListEl = document.querySelector('.messages-list');\r\n    if (!userListEl || !messageListEl) {\r\n        return;\r\n    }\r\n    const userListHTML = generateUsersLists();\r\n\r\n    const messageListHTML = generateMessagesList();\r\n\r\n    userListEl.innerHTML = userListHTML;\r\n    messageListEl.innerHTML = messageListHTML;\r\n}\r\n\r\nexport default update;","import state from './state';\r\n\r\nfunction generateUsersLists() {\r\n    const userListHTML = state.users\r\n        .map(\r\n            (user) => `<li class=\"single-user\"> \r\n        <img src=\"/img/${user.imgID}.png\" class=\"user-avatar\" />\r\n        <span class=\"user-name\">${user.username}</span>\r\n        </li>`\r\n        )\r\n        .join('');\r\n\r\n    return userListHTML;\r\n}\r\n\r\nexport default generateUsersLists;","import renderLoginPage from './login';\r\n\r\nimport renderChatPage from './chat';\r\n\r\nfunction render() {\r\n    renderLoginPage();\r\n    renderChatPage();\r\n}\r\n\r\nexport default render;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import state from './state';\r\nimport render from './view';\r\nimport services from './services';\r\nimport handleError from './error';\r\nimport update from './update';\r\n\r\nconst appEl = document.querySelector('#app');\r\n\r\nappEl.addEventListener('click', (e) => {\r\n    if (e.target.classList.contains('login-button')) {\r\n        e.preventDefault();\r\n        const loginInputEl = document.querySelector('#login-input');\r\n        const username = loginInputEl.value;\r\n        state.isLoginLoading = true;\r\n        state.error = '';\r\n        render();\r\n        setTimeout(() => {\r\n            services\r\n                .fetchLogin(username)\r\n                .then((user) => {\r\n                    state['username'] = user.username;\r\n                    state.logged = true;\r\n                    state.error = '';\r\n                })\r\n                .then(() => {\r\n                    state.isChatLoading = true;\r\n                    render();\r\n                    setTimeout(() => {\r\n                        fetchChatPage();\r\n                    }, 1500);\r\n                })\r\n                .catch((err) => {\r\n                    state.isLoginLoading = false;\r\n                    state.isChatLoading = false;\r\n                    handleError(err);\r\n                });\r\n        }, 1500);\r\n\r\n        return;\r\n    }\r\n\r\n    if (e.target.classList.contains('send-button')) {\r\n        const chatInputEl = document.querySelector('#chat-input');\r\n        const message = chatInputEl.value;\r\n        e.preventDefault();\r\n        services\r\n            .sendMessage(message)\r\n            .then((messageInfo) => {\r\n                state.messages.push(messageInfo);\r\n                render();\r\n            })\r\n            .catch((err) => {\r\n                handleError(err);\r\n            });\r\n        return;\r\n    }\r\n\r\n    if (e.target.classList.contains('logout-button')) {\r\n        services\r\n            .logOut()\r\n            .then(() => {\r\n                state.logged = false;\r\n                state.error = '';\r\n                state.users = [];\r\n                state.messages = [];\r\n                render();\r\n            })\r\n            .catch((err) => handleError(err));\r\n        return;\r\n    }\r\n});\r\n\r\nfunction checkLogin() {\r\n    state.isInitialLoading = true;\r\n    render();\r\n    setTimeout(() => {\r\n        state.isInitialLoading = false;\r\n        services\r\n            .checkSession()\r\n            .then((user) => {\r\n                state['username'] = user.username;\r\n                state.logged = true;\r\n                state.error = '';\r\n                fetchChatPage();\r\n            })\r\n            .catch(() => {\r\n                state.logged = false;\r\n                state.error = '';\r\n                state.isLoginLoading = false;\r\n                state.isChatLoading = false;\r\n                render();\r\n            });\r\n    }, 2000);\r\n}\r\n\r\nfunction fetchChatPage() {\r\n    services\r\n        .fetchUserList()\r\n        .then((userList) => {\r\n            state.users = userList;\r\n        })\r\n        .then(() => services.fetchMessages())\r\n        .then((messages) => {\r\n            state.messages = messages;\r\n            state.logged = true;\r\n            state.error = '';\r\n            state.isLoginLoading = false;\r\n            state.isChatLoading = false;\r\n            render();\r\n        })\r\n        .catch((err) => {\r\n            state.isChatLoading = false;\r\n            state.isChatLoading = false;\r\n            handleError(err);\r\n        });\r\n}\r\n\r\nfunction refreshChatPage() {\r\n    if (state.logged) {\r\n        services\r\n            .fetchUserList()\r\n            .then((userList) => {\r\n                state.users = userList;\r\n            })\r\n            .then(() => services.fetchMessages())\r\n            .then((messages) => {\r\n                state.messages = messages;\r\n                state.logged = true;\r\n                state.error = '';\r\n                state.isLoginLoading = false;\r\n                state.isChatLoading = false;\r\n                update();\r\n            })\r\n            .catch((err) => handleError(err));\r\n    }\r\n}\r\n\r\nfunction pollChatPage() {\r\n    refreshChatPage();\r\n    setTimeout(pollChatPage, 5000);\r\n}\r\n\r\ncheckLogin();\r\npollChatPage();"],"names":["state","generateUsersLists","generateMessagesList","appEl","document","querySelector","renderChatPage","logged","userListHTML","messageListHTML","messageHTML","isChatLoading","error","innerHTML","render","messages","handleError","err","renderLoginPage","isInitialLoading","spinnerHTML","isLoginLoading","errorHTML","loginHTML","length","map","message","imgID","user","username","join","fetchLogin","fetch","method","headers","credentials","body","JSON","stringify","Promise","reject","then","response","ok","json","checkSession","logOut","fetchUserList","fetchMessages","sendMessage","services","users","update","userListEl","messageListEl","addEventListener","e","target","classList","contains","preventDefault","loginInputEl","value","setTimeout","fetchChatPage","chatInputEl","messageInfo","push","checkLogin","userList","refreshChatPage","pollChatPage"],"sourceRoot":""}